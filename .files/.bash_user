#!/usr/bin/env bash
# bashrc           _▄▄
# _▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄█●_█
# █  - ◄█▘ ◦ ▝█  -▄█  █
# ▜▄▄█▄▄█▄▄█▄▄█▄▄███▄▄▛
# github.com/rafi/.config

source "$HOME/.shell_env"

# Abort if not running interactively
[[ $- == *i* ]] || return 0

# If fish is installed, use it instead. exec will terminate immediately here.
hash fish 2>/dev/null && exec fish -il

# Remove mappings. See all: stty -a
stty stop undef          # Remove the ^Q mapping
stty start undef         # Remove the ^S mapping

# Bash settings
shopt -s cdspell         # Auto-corrects cd misspellings
shopt -s cmdhist         # Save multi-line commands in history as single line
shopt -s dotglob         # Include dotfiles in pathname expansion
shopt -s expand_aliases  # Expand aliases
shopt -s extglob         # Enable extended pattern-matching features
shopt -s histreedit      # Add failed commands to the bash history
shopt -s histappend      # Append each session's history to $HISTFILE
shopt -s histverify      # Edit a recalled history line before executing

if [[ $DISPLAY ]]; then
	shopt -s checkwinsize  # Update LINES and COLUMNS after each command
fi

# Enable readline vi-mode for myself only
# See ./functions.d/ssh.bash for implementation
if [ "${LC_IDENTIFICATION:-$USER}" = rafi ] \
	|| [[ "${LC_IDENTIFICATION:-$USER}" == rafael* ]]
then
	set -o vi
fi

# Source all extra functions
for func in "$XDG_CONFIG_HOME/bash/functions.d/"*.bash; do
	# shellcheck disable=1090
	. "$func"
done
unset func

# Must be loaded _after_ setting PROMPT_COMMAND
if command -v zoxide 1>/dev/null 2>&1; then
	export _ZO_ECHO=1
	export _ZO_DATA_DIR="$XDG_CACHE_HOME/zoxide"
	eval "$(zoxide init bash)"
fi

# See https://github.com/junegunn/fzf
if [ -f "$HOME/.local/bin/fzf.bash" ]; then
	. "$HOME/.local/bin/fzf.bash"
fi

# Setup fast colorful prompt display
if command -v starship 1>/dev/null 2>&1; then
	eval "$(starship init bash)"
fi

# Load bash aliases
source "$HOME/.shell_aliases"

# Archlinux loads bash completions from /etc automatically
# https://wiki.archlinux.org/index.php/Bash#Configuration_files
# Deal with other operating-systems
if [[ "$OSTYPE" == "darwin"* ]]; then
	# macOS Homebrew bash completions
	if [[ -f "/opt/homebrew/etc/profile.d/bash_completion.sh" ]]; then
		# Load entire Homebrew installed software's bash completion
		# export BASH_COMPLETION_DEBUG=1
		source "/opt/homebrew/etc/profile.d/bash_completion.sh"
	else
		for COMPLETION in "/opt/homebrew/etc/bash_completion.d/"*; do
			[[ -r "${COMPLETION}" ]] && source "${COMPLETION}"
		done
	fi
elif [ -f /etc/lsb-release ]; then
	# Ubuntu/Debian manual bash completions loading
	if [ -f /usr/share/bash-completion/bash_completion ]; then
		. /usr/share/bash-completion/bash_completion
	elif [ -f /etc/bash_completion ]; then
		. /etc/bash_completion
	fi
fi

# Tmux: on login, attach to existing session or create a new one.
if [[ $- == *i* ]] && hash tmux 2>/dev/null && [ -z "$TMUX" ]; then
	# In SSH sessions, list tmux sessions on log-in.
	if [ -n "$SSH_TTY" ]; then
		tmux list-sessions -F '#S #{session_path} (#{session_windows}) > #H > #W (#{window_panes}) > #{pane_title} #{buffer_created} #{buffer_sample} #{session_activity} #{user} #{socket_path}' 2>/dev/null
	else
		# Auto-attach (or new session)
		tmux attach 2>/dev/null || tmux new-session -A -s main
	fi
fi

# vim: set ft=sh ts=2 sw=2 tw=80 noet :
