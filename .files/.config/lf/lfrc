# lf settings
# github.com/rafi/.config

set shell bash
set shellopts '-eu'
set ifs "\n"

# set color256
set icons
set hidden
set incsearch
set scrolloff 4
set tabstop 2
set smartcase
set dircounts
set info size
set sortby natural
set ratios '1:2:3'
set timefmt '2006-01-02 15:04:05 -0700'
set previewer ~/.config/lf/preview

set promptfmt "
\033[38;5;8m\033[48;5;236m %u@%h \033[38;5;236m\033[48;5;234m
\033[38;5;8m\033[48;5;234m %w/%f \033[0m\033[38;5;234m\033[0m
"

# Secure logs and socket
# ${{
# 	if [ -S "${TMPDIR:-/tmp/}lf.${USER}.sock" ]; then
# 		chmod o-rwx "${TMPDIR:-/tmp/}lf.${USER}."*
# 	fi
# }}

# keyboard mappings
# ---

# open machanisms
map <enter> open
map E &$OPENER $f
map o $mimeopen --ask $f
map O $mimeopen --ask-default $f

# general utilities
# ---
map i $LESS='-iWQMXR~' bat --paging=always --theme=TwoDark "$f"
map I push A<c-a>
map A rename
map D trash
map H jump-prev
map L jump-next
map . set hidden!

# create directory/file
map ad push $mkdir<space>
map af push $touch<space>
map au !du -hsx * | sort -rh | less
map ai !gstat $f || stat $f; echo ; du -sh $f ; echo ; file -I -b -p $f

# Quickly locate a file with fzf and select it in lf
map gf $lf -remote "send $id select $(fzf)"

# map <esc> unselect; clear
map zz push :z<space>

map sn :{{ set sortby natural; set info size; set preview; }}
map sa :{{ set sortby natural; set info size; set nopreview; set ratios 3:5; }}
map ss :{{ set sortby size; set info size; set preview; }}
map st :{{ set sortby time; set info time; set preview; }}

# Tmux
map sg &tmux split-window -h lf
map sv &tmux split-window -v lf

# show documentation
map g? $lf -doc | less

# beyond compare selected files/directories
map = &bcompare $fx

# execute current file (must be executable)
# map x $$f
# map X !$f

# directory aliases
map gv cd ~/.config/nvim
map gc cd ~/.config
map gp cd ~/code
map gdl cd ~/dl
map gdo cd ~/docs
map ge cd /etc
map gm cd /mnt
map go cd /opt
map g/ cd /
map g~ cd ~

# waiting for https://github.com/gokcehan/lf/issues/111
# cmap <c-right> cmd-word
# cmap <c-left> cmd-word-back

# commands
# ---

cmd mkdir %[ -n "${1}" ] && mkdir -p ${@} || echo "Argument needed"
cmd mkfile %[ -n "${1}" ] && touch ${@} || echo "Argument needed"

# Implement trash command
cmd trash ${{
	set -f
	if hash trash-put 2>/dev/null; then
		trash-put -v -- $fx
	else
		mkdir -p "$HOME"/.trash
		mv -vi $fx "$HOME"/.trash
	fi
}}

# Replace open command with robust selection of openers
cmd open ${{
	case $(file --dereference --mime-type $f -b) in
		inode/x-empty) $EDITOR $fx ;;
		text/*) $EDITOR $fx;;
		video/*) nohup mpv $fx > /dev/null & ;;
		audio/*) nohup mpv $fx > /dev/null & ;;
		audio/midi) timidity $fx ;;
		application/epub+zip) nohup FBReader $f > /dev/null & ;;
		application/pdf) nohup zathura $f > /dev/null & ;;
		*) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
	esac
}}

# quickly cd into frecent directories using zoxide, zlua or rupa/z
cmd z ${{
	set +u
	dest=''
	prefix=''
	[[ "$OSTYPE" == "darwin"* ]] && prefix='/usr/local'
	if hash zoxide 2>/dev/null; then
		dest="$(zoxide query "$@")"
	# See: https://github.com/skywind3000/z.lua
	elif [ -f "$prefix/etc/profile.d/z.lua" ]; then
		export _ZL_NO_PROMPT_COMMAND=1
		dest="$(lua "$prefix/etc/profile.d/z.lua" -e "$@")"
	# See https://github.com/rupa/z
	elif [ -f "$prefix/etc/profile.d/z.sh" ] || [ -f "$prefix/share/z/z.sh"]; then
		export _Z_NO_PROMPT_COMMAND=1
		source "$prefix/etc/profile.d/z.sh" || source "$prefix/share/z/z.sh"
		dest="$(_z "$@" && pwd)"
	fi

	if test -n "${dest}"; then
		lf -remote "send $id cd '${dest}'"
	else
		lf -remote "send $id echo 'Invalid directory ${dest}'"
	fi
}}

cmd fzf_z ${{
	sel="$(zoxide query -l | fzf +s)"
	[ -d "$sel" ] && lf -remote "send $id cd \"$sel\""
}}

# dynamically set info displayed based on the number of columns
cmd resize %{{
	w=$(tmux display-message -p '#{pane_width}' || tput cols)
	# w=$(tput cols)
	if [ $w -le 62 ]; then
		lf -remote "send $id set ratios 1:4"
		lf -remote "send $id set nopreview"
	elif [ $w -le 80 ]; then
		lf -remote "send $id set ratios 1:2:2"
	elif [ $w -le 100 ]; then
		lf -remote "send $id set ratios 1:2:3"
	else
		lf -remote "send $id set ratios 2:4:5"
	fi
	# lf -remote "send $id echo 'ui adjusted for width of $w'"
}}
resize

#  vim: set ts=2 sw=2 tw=80 noet :
